<?xml version="1.0" encoding="utf-8" ?>
<!--

Purpose: This include file enables and configures the Search foundation module.

The Search foundation module configures the search API that is used by search renderings.

To disable this file, change its extension to ".disabled".

-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
    <sitecore>
        <settings>
            <setting name="WebEdit.ShowNumberOfLockedItemsOnButton">
                <patch:attribute name="value">false</patch:attribute>
            </setting>
            <!-- QUERY MAX ITEMS
           The maximum number of items to query in one call.
      -->
            <setting name="XA.Foundation.Search.QueryMaxItems" value="100" />
        </settings>
        <pipelines>
            <getFacets>
                <processor type="Sitecore.XA.Foundation.Search.Pipelines.GetFacets.GetSiteFacets, Sitecore.XA.Foundation.Search" resolve="true"/>
                <processor type="Sitecore.XA.Foundation.Search.Pipelines.GetFacets.GetSharedFacets, Sitecore.XA.Foundation.Search" resolve="true"/>
            </getFacets>
            <buckets.getFacets>
                <processor type="Sitecore.XA.Foundation.Search.Pipelines.BucketsGetFacets.SiteFacets, Sitecore.XA.Foundation.Search" patch:instead="*[@type='Sitecore.Buckets.Pipelines.Search.GetFacets.RunFacets, Sitecore.Buckets']" resolve="true" />
            </buckets.getFacets>
            <resolveRenderingDatasource>
                <processor type="Sitecore.XA.Foundation.Search.Pipelines.ResolveRenderingDatasource.SearchDatasource, Sitecore.XA.Foundation.Search" resolve="true" />
            </resolveRenderingDatasource>
            <resolveSearchQueryTokens>
                <processor type="Sitecore.XA.Foundation.Search.Pipelines.ResolveSearchQueryTokens.CurrentLocation, Sitecore.XA.Foundation.Search" resolve="true" />
                <processor type="Sitecore.XA.Foundation.Search.Pipelines.ResolveSearchQueryTokens.CurrentTemplate, Sitecore.XA.Foundation.Search" resolve="true" />
                <processor type="Sitecore.XA.Foundation.Search.Pipelines.ResolveSearchQueryTokens.ItemsWithTheSameValueInField, Sitecore.XA.Foundation.Search" resolve="true" />
                <processor type="Sitecore.XA.Foundation.Search.Pipelines.ResolveSearchQueryTokens.ExcludeCurrentPage, Sitecore.XA.Foundation.Search" resolve="true" />
            </resolveSearchQueryTokens>
            <resolveBoostingQuery>
                <processor type="Sitecore.XA.Foundation.Search.Pipelines.ResolveBoostingQuery.ResolveFieldAndQueryMatchRule, Sitecore.XA.Foundation.Search" resolve="true" />
                <processor type="Sitecore.XA.Foundation.Search.Pipelines.ResolveBoostingQuery.ResolveFieldContainsCurrentPageFieldRule, Sitecore.XA.Foundation.Search" resolve="true" />
            </resolveBoostingQuery>
        </pipelines>
        <services>
            <register serviceType="Sitecore.XA.Foundation.Search.Services.ISortingService, Sitecore.XA.Foundation.Search" implementationType="Sitecore.XA.Foundation.Search.Services.SortingService, Sitecore.XA.Foundation.Search" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Search.Services.ISearchService, Sitecore.XA.Foundation.Search" implementationType="Sitecore.XA.Foundation.Search.Services.SearchService, Sitecore.XA.Foundation.Search" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Search.Services.IScopeService, Sitecore.XA.Foundation.Search" implementationType="Sitecore.XA.Foundation.Search.Services.ScopeService, Sitecore.XA.Foundation.Search" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Search.Services.IFacetService, Sitecore.XA.Foundation.Search" implementationType="Sitecore.XA.Foundation.Search.Services.FacetService, Sitecore.XA.Foundation.Search" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Search.Services.IIndexResolver, Sitecore.XA.Foundation.Search" implementationType="Sitecore.XA.Foundation.Search.Services.IndexResolver, Sitecore.XA.Foundation.Search" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Search.Services.ISearchContextService, Sitecore.XA.Foundation.Search" implementationType="Sitecore.XA.Foundation.Search.Services.SearchContextService, Sitecore.XA.Foundation.Search" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Search.Services.IOrderingParametersParserService, Sitecore.XA.Foundation.Search" implementationType="Sitecore.XA.Foundation.Search.Services.OrderingParametersParserService, Sitecore.XA.Foundation.Search" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Search.Services.ISearchQueryTokenResolver, Sitecore.XA.Foundation.Search" implementationType="Sitecore.XA.Foundation.Search.Services.SearchQueryTokenResolver, Sitecore.XA.Foundation.Search" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Search.Services.IBoostingService, Sitecore.XA.Foundation.Search" implementationType="Sitecore.XA.Foundation.Search.Services.BoostingService, Sitecore.XA.Foundation.Search" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Search.Interfaces.IContentSearchManager, Sitecore.XA.Foundation.Search" implementationType="Sitecore.XA.Foundation.Search.Wrappers.ContentSearchManager, Sitecore.XA.Foundation.Search" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.Search.Interfaces.ILinqHelper, Sitecore.XA.Foundation.Search" implementationType="Sitecore.XA.Foundation.Search.Wrappers.LinqHelper, Sitecore.XA.Foundation.Search" lifetime="Singleton"/>
        </services>
    </sitecore>
</configuration>