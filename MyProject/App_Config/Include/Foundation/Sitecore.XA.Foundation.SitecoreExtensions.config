<?xml version="1.0" encoding="utf-8" ?>
<!--

Purpose: This include file enables and configures the Sitecore Extensions foundation module.

The Extensions foundation module improves the general authoring experience. 

To disable this file, change its extension to ".disabled".

-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
    <sitecore>
        <events>
            <event name="publish:end">
                <handler type="Sitecore.XA.Foundation.SitecoreExtensions.EventHandlers.SitecoreExtensionsCacheClearer, Sitecore.XA.Foundation.SitecoreExtensions" method="OnPublishEnd" />
            </event>
            <event name="publish:end:remote">
                <handler type="Sitecore.XA.Foundation.SitecoreExtensions.EventHandlers.SitecoreExtensionsCacheClearer, Sitecore.XA.Foundation.SitecoreExtensions" method="OnPublishEnd" />
            </event>
            <event name="item:saved">
                <handler type="Sitecore.XA.Foundation.SitecoreExtensions.EventHandlers.SitecoreExtensionsCacheClearer, Sitecore.XA.Foundation.SitecoreExtensions" method="OnItemSaved" />
                <handler type="Sitecore.XA.Foundation.SitecoreExtensions.EventHandlers.ExtendedPropertiesCacheClearer, Sitecore.XA.Foundation.SitecoreExtensions" method="OnItemSaved" />
            </event>
            <event name="item:moved">
                <handler type="Sitecore.XA.Foundation.SitecoreExtensions.EventHandlers.SitecoreExtensionsCacheClearer, Sitecore.XA.Foundation.SitecoreExtensions" method="OnItemMoved" />
            </event>
            <event name="item:moved:remote">
                <handler type="Sitecore.XA.Foundation.SitecoreExtensions.EventHandlers.SitecoreExtensionsCacheClearer, Sitecore.XA.Foundation.SitecoreExtensions" method="OnItemMovedRemote" />
            </event>
            <event name="item:saved:remote">
                <handler type="Sitecore.XA.Foundation.SitecoreExtensions.EventHandlers.SitecoreExtensionsCacheClearer, Sitecore.XA.Foundation.SitecoreExtensions" method="OnItemSavedRemote" />
                <handler type="Sitecore.XA.Foundation.SitecoreExtensions.EventHandlers.ExtendedPropertiesCacheClearer, Sitecore.XA.Foundation.SitecoreExtensions" method="OnItemSavedRemote" />
            </event>
        </events>
        <settings>
            <!--  INVALID CHARS
            A list of the characters that are invalid in an item name.
      -->
            <setting name="InvalidItemNameChars">
                <patch:attribute name="value">\/:?&quot;&lt;&gt;|[].</patch:attribute>
            </setting>
            <!-- MAX TOOLBAR COMMANDS
           The maximum numer of commands that are allowed in the edit frame of a component.
      -->
            <setting name="XA.Foundation.SitecoreExtensions.MaxToolbarCommands" value="15" />
            <setting name="XA.Foundation.SitecoreExtensions.ParentOfTemplateCacheMaxSize" value="50MB" />
            <setting name="XA.Foundation.SitecoreExtensions.ChildOfTemplateCacheMaxSize" value="50MB" />
            <setting name="XA.Foundation.SitecoreExtensions.TemplateInheritanceCacheMaxSize" value="50MB" />
            <setting name="XA.Foundation.SitecoreExtensions.ExtendedPropertiesCacheMaxSize" value="50MB" />
        </settings>
        <experienceAccelerator>
            <sitecoreExtensions>
                <!-- List of the templates that can store child items. This list is used to resolve referenced elements (for example, during publishing). -->
                <childrenGroupingTemplates>
                    <template name="Link List">{F7561FFC-C0D8-477F-B53D-2703A4060BE1}</template>
                    <template name="Carousel">{ADD22F05-6B4C-4344-95AD-9A1A9BA6A216}</template>
                    <template name="Tabs">{F26A9560-CCF1-48C5-9542-800E837CAF7A}</template>
                    <template name="Social Media Buttons">{EFAFBBF5-01A0-46D3-9F7B-E71763E7F221}</template>
                    <template name="Gallery">{57BCF1CE-35CB-4752-B23B-2D4522AF6292}</template>
                    <template name="File List">{97E0240B-B5FC-422B-8A72-44D2B00FACD6}</template>
                    <template name="Form">{7F9D1A45-F31E-4714-AC66-1E300AE1B792}</template>
                    <template name="Event List">{311E5F53-CF27-4A85-B887-B84BEE5D3BA3}</template>
                    <template name="Flip">{5EF07850-4C04-4B83-9DAF-EFD752CFABA8}</template>
                    <template name="Playlist">{1BF71895-BC29-47DA-8B79-7FD5F88363D9}</template>
                    <template name="Accordion">{705CC8B3-BDE5-4CB3-BF1C-E455A2A36EF1}</template>
                </childrenGroupingTemplates>
                <hideContentEditorFields>
                    <!-- To hide fields in the Content Editor, add a node like the following example.-->
                    <!-- <field id="{7FA55F16-2A51-410F-8109-50316805835F}" />-->
                </hideContentEditorFields>
                <filterUrlFilesAndExtensions>
                    <!-- To filter files, add a node like the following example. -->
                    <!-- <file desc="Allowed file - Feature.Name">fileName.ext</file> -->
                </filterUrlFilesAndExtensions>
                <!-- List of the modules that must be checked before displaying a rendering (as some renderings might use modules). -->
                <dependentModules>
                    <module name="E-mail Campaign Manager">/sitecore/system/Modules/E-mail Campaign Manager</module>
                    <module name="Web Forms for Marketers">/sitecore/system/Modules/Web Forms for Marketers</module>
                    <module name="Social Connected">/sitecore/system/Social</module>
                </dependentModules>
            </sitecoreExtensions>
        </experienceAccelerator>
        <pipelines>
            <mvc.renderPageExtenders>
                <processor patch:after="*[@type='Sitecore.Mvc.ExperienceEditor.Pipelines.RenderPageExtenders.SpeakRibbon.RenderPageEditorSpeakExtender, Sitecore.Mvc.ExperienceEditor']"
                    type="Sitecore.XA.Foundation.SitecoreExtensions.Pipelines.RenderPageExtenders.UpdateMaxToolbarCommands, Sitecore.XA.Foundation.SitecoreExtensions" resolve="true" />
            </mvc.renderPageExtenders>
            <mvc.renderPlaceholder>
                <processor patch:instead="*[@type='Sitecore.Mvc.Pipelines.Response.RenderPlaceholder.PerformRendering, Sitecore.Mvc']" type="Sitecore.XA.Foundation.SitecoreExtensions.Pipelines.RenderPlaceholder.PerformRendering, Sitecore.XA.Foundation.SitecoreExtensions" resolve="true" />
            </mvc.renderPlaceholder>
            <httpRequestBegin>
                <processor patch:after="*[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" type="Sitecore.XA.Foundation.SitecoreExtensions.Pipelines.HttpRequestBegin.CultureResolver, Sitecore.XA.Foundation.SitecoreExtensions" resolve="true" />
            </httpRequestBegin>
            <preprocessRequest>
                <processor patch:instead="*[@type='Sitecore.Pipelines.PreprocessRequest.FilterUrlExtensions, Sitecore.Kernel']"
                           type="Sitecore.XA.Foundation.SitecoreExtensions.Pipelines.PreprocessRequest.FilterUrlFilesAndExtensions, Sitecore.XA.Foundation.SitecoreExtensions">
                    <param desc="Allowed extensions (comma separated)">aspx, ashx, asmx</param>
                    <param desc="Blocked extensions (comma separated)">*</param>
                    <param desc="Blocked extensions that stream files (comma separated)">*</param>
                    <param desc="Blocked extensions that do not stream files (comma separated)"/>
                </processor>
            </preprocessRequest>
            <getContentEditorFields>
                <processor type="Sitecore.XA.Foundation.SitecoreExtensions.Pipelines.GetContentEditorFields.HideFields, Sitecore.XA.Foundation.SitecoreExtensions" resolve="true" />
                <processor type="Sitecore.XA.Foundation.SitecoreExtensions.Pipelines.GetContentEditorFields.AddContextToRenderingParameters, Sitecore.XA.Foundation.SitecoreExtensions" resolve="true" />
                <processor type="Sitecore.XA.Foundation.SitecoreExtensions.Pipelines.GetContentEditorFields.MergeDuplicatedSections, Sitecore.XA.Foundation.SitecoreExtensions" resolve="true" />
            </getContentEditorFields>
            <indexing.getDependencies>
                <processor type="Sitecore.XA.Foundation.SitecoreExtensions.Pipelines.IndexingGetDependencies.GetDatasourceDependencies, Sitecore.XA.Foundation.SitecoreExtensions" resolve="true" />
            </indexing.getDependencies>
            <renderField>
                <processor patch:before="*[@type='Sitecore.Pipelines.RenderField.GetFieldValue, Sitecore.Kernel']"
                    type="Sitecore.XA.Foundation.SitecoreExtensions.Pipelines.RenderField.SetImageStyleParameters, Sitecore.XA.Foundation.SitecoreExtensions" resolve="true" />
            </renderField>
            <ensureSessionContext>
                <processor type="Sitecore.XA.Foundation.SitecoreExtensions.Pipelines.EnsureSessionContext.ReplaceEmptyIp, Sitecore.XA.Foundation.SitecoreExtensions" resolve="true" />
            </ensureSessionContext>
        </pipelines>
        <services>
            <register serviceType="Sitecore.XA.Foundation.SitecoreExtensions.Repositories.IContentRepository, Sitecore.XA.Foundation.SitecoreExtensions" implementationType="Sitecore.XA.Foundation.SitecoreExtensions.Repositories.ContentRepository, Sitecore.XA.Foundation.SitecoreExtensions" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.SitecoreExtensions.Repositories.IDatabaseRepository, Sitecore.XA.Foundation.SitecoreExtensions" implementationType="Sitecore.XA.Foundation.SitecoreExtensions.Repositories.DatabaseRepository, Sitecore.XA.Foundation.SitecoreExtensions" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.SitecoreExtensions.Modules.IModuleStatusProvider, Sitecore.XA.Foundation.SitecoreExtensions" implementationType="Sitecore.XA.Foundation.SitecoreExtensions.Modules.ModuleStatusProvider, Sitecore.XA.Foundation.SitecoreExtensions" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.SitecoreExtensions.Services.IRazorService, Sitecore.XA.Foundation.SitecoreExtensions" implementationType="Sitecore.XA.Foundation.SitecoreExtensions.Services.RazorService, Sitecore.XA.Foundation.SitecoreExtensions" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.SitecoreExtensions.Services.IReflectionService, Sitecore.XA.Foundation.SitecoreExtensions" implementationType="Sitecore.XA.Foundation.SitecoreExtensions.Services.ReflectionService, Sitecore.XA.Foundation.SitecoreExtensions" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.SitecoreExtensions.Services.IVersionService, Sitecore.XA.Foundation.SitecoreExtensions" implementationType="Sitecore.XA.Foundation.SitecoreExtensions.Services.VersionService, Sitecore.XA.Foundation.SitecoreExtensions" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.SitecoreExtensions.Services.IQueryService, Sitecore.XA.Foundation.SitecoreExtensions" implementationType="Sitecore.XA.Foundation.SitecoreExtensions.Services.QueryService, Sitecore.XA.Foundation.SitecoreExtensions" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.SitecoreExtensions.Services.ISuspendedPipelineService, Sitecore.XA.Foundation.SitecoreExtensions" implementationType="Sitecore.XA.Foundation.SitecoreExtensions.Services.SuspendedPipelineService, Sitecore.XA.Foundation.SitecoreExtensions" lifetime="Singleton"/>
            <register serviceType="Sitecore.XA.Foundation.SitecoreExtensions.Services.IExtendedPropertiesService, Sitecore.XA.Foundation.SitecoreExtensions" implementationType="Sitecore.XA.Foundation.SitecoreExtensions.Services.ExtendedPropertiesService, Sitecore.XA.Foundation.SitecoreExtensions" lifetime="Singleton"/>
        </services>
        <fieldTypes>
            <fieldType patch:instead="*[@name='Layout']" name="Layout" type="Sitecore.XA.Foundation.SitecoreExtensions.CustomFields.LayoutField, Sitecore.XA.Foundation.SitecoreExtensions"/>
            <fieldType name="Queryable Droptree" type="Sitecore.Data.Fields.ReferenceField, Sitecore.Kernel" />
            <fieldType patch:after="*[@name='TreelistEx']" name="Tag Treelist" type="Sitecore.Data.Fields.MultilistField, Sitecore.Kernel" />
            <fieldType patch:after="*[@name='Tag Treelist']" name="Multiroot Treelist" type="Sitecore.Data.Fields.MultilistField, Sitecore.Kernel" />
        </fieldTypes>
        <controlSources>
            <source patch:before="*[@namespace='Sitecore.Shell.Applications.ContentEditor']" mode="on" namespace="Sitecore.XA.Foundation.SitecoreExtensions.CustomFields.FieldTypes" assembly="Sitecore.XA.Foundation.SitecoreExtensions" prefix="content"/>
        </controlSources>
    </sitecore>
</configuration>