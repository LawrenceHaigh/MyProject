<?xml version="1.0" encoding="utf-8" ?>
<!--

Purpose: This include file enables and configures the Theming foundation module.

Themes define the look and feel of a site and can be created separately from the site functionality and content. A theme is a set of assets (style sheets, JavaScripts & images) that can be selected on a per-site basis. Files placed in a theme are automatically included in a page and optimized for high performance.
The platform can be styled in any way the customer requires. Themes allow you to take an existing site and change it completely with very limited effort. 
You can attach multiple sets of CSS files to any site to enable rebranding by simply changing the theme.

To disable this file, change its extension to ".disabled".

-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <settings>
      <!-- STYLES CONFIGURATION ID
           The ID of the item that stores the configuration for style asset optimization.
      -->
      <setting name="XA.Foundation.Theming.StylesConfigurationId" value="{B3B10434-DACE-483E-B375-49C6D215723D}" />
      <!-- SCRIPTS CONFIGURATION ID
           The ID of the item that stores the configuration for script asset optimization.
      -->
      <setting name="XA.Foundation.Theming.ScriptsConfigurationId" value="{4110D103-861E-464F-A258-130A8FCF4C61}" />
      <!-- WIREFRAME IMAGE MEDIA ID
           The ID of the media item which is used to display wireframe images.
      -->
      <setting name="XA.Foundation.Theming.WireframeImageMediaId" value="{72B297F7-0A59-43AF-B694-2DAF432045EB}" />
    </settings>
    <experienceAccelerator>
      <multisite>
        <!-- List of the fields that are used to determine which items should be cleared in HTML caches. -->
        <htmlCacheClearer>
          <fieldID desc="Theme - Field">{C0C88E34-D7E6-46A0-B84F-B0A432D11642}</fieldID>
          <fieldID desc="CompatibleThemes - Field">{BEEEDE03-AB13-4558-96F9-C3E8957B46F8}</fieldID>
        </htmlCacheClearer>
      </multisite>
    </experienceAccelerator>
    <events>
      <event name="publish:end">
        <handler type="Sitecore.XA.Foundation.Theming.EventHandlers.AssetContentRefresher, Sitecore.XA.Foundation.Theming" method="OnPublishEnd" />
      </event>
      <event name="publish:end:remote">
        <handler type="Sitecore.XA.Foundation.Theming.EventHandlers.AssetContentRefresher, Sitecore.XA.Foundation.Theming" method="OnPublishEndRemote" />
      </event>
      <event name="item:copied">
        <handler type="Sitecore.XA.Foundation.Theming.EventHandlers.AssetContentRefresher, Sitecore.XA.Foundation.Theming" method="OnItemCopied" />
      </event>
      <event name="item:copied:remote">
        <handler type="Sitecore.XA.Foundation.Theming.EventHandlers.AssetContentRefresher, Sitecore.XA.Foundation.Theming" method="OnItemCopiedRemote" />
      </event>
      <event name="item:saved">
        <handler type="Sitecore.XA.Foundation.Theming.EventHandlers.AssetContentRefresher, Sitecore.XA.Foundation.Theming" method="OnItemSaved" />
        <handler type="Sitecore.XA.Foundation.Theming.EventHandlers.ThemeExtensionsCacheClearer, Sitecore.XA.Foundation.Theming" method="OnItemSaved" />
      </event>
      <event name="item:saved:remote">
        <handler type="Sitecore.XA.Foundation.Theming.EventHandlers.AssetContentRefresher, Sitecore.XA.Foundation.Theming" method="OnItemSavedRemote" />
        <handler type="Sitecore.XA.Foundation.Theming.EventHandlers.ThemeExtensionsCacheClearer, Sitecore.XA.Foundation.Theming" method="OnItemSavedRemote" />
      </event>
      <event name="item:deleted">
        <handler type="Sitecore.XA.Foundation.Theming.EventHandlers.AssetContentRefresher, Sitecore.XA.Foundation.Theming" method="OnItemDeleted" />
      </event>
      <event name="item:deleted:remote">
        <handler type="Sitecore.XA.Foundation.Theming.EventHandlers.AssetContentRefresher, Sitecore.XA.Foundation.Theming" method="OnItemDeletedRemote" />
      </event>
    </events>
    <pipelines>
      <publishItem>
        <processor patch:before="*[1]" type="Sitecore.XA.Foundation.Theming.Pipelines.PublishItem.CheckOptimizedItem, Sitecore.XA.Foundation.Theming" resolve="true" />
      </publishItem>
      <resolveTokens>
        <processor type="Sitecore.XA.Foundation.Theming.Pipelines.ResolveTokens.ResolveThemingTokens, Sitecore.XA.Foundation.Theming" resolve="true" />
      </resolveTokens>
      <mediaRequestHandler>
        <processor patch:after="*[@type='Sitecore.XA.Foundation.MediaRequestHandler.Pipelines.MediaRequestHandler.GetMediaFromUrl, Sitecore.XA.Foundation.MediaRequestHandler']" type="Sitecore.XA.Foundation.Theming.Pipelines.MediaRequestHandler.WireframeImages, Sitecore.XA.Foundation.Theming" resolve="true" />
        <processor patch:after="*[@type='Sitecore.XA.Foundation.MediaRequestHandler.Pipelines.MediaRequestHandler.GetMediaFromUrl, Sitecore.XA.Foundation.MediaRequestHandler']" type="Sitecore.XA.Foundation.Theming.Pipelines.MediaRequestHandler.OptimizedFiles, Sitecore.XA.Foundation.Theming" resolve="true" />
      </mediaRequestHandler>
      <httpRequestBegin>
        <processor patch:after="*[@type='Sitecore.Pipelines.HttpRequest.DeviceSimulatorResolver, Sitecore.Kernel']" type="Sitecore.XA.Foundation.Theming.Pipelines.HttpRequestBegin.AppendCompatibilityModeHeader, Sitecore.XA.Foundation.Theming" resolve="true" />
      </httpRequestBegin>
      <httpRequestProcessed>
        <processor patch:after="*[@type='Sitecore.Analytics.Pipelines.HttpRequest.EndAnalytics,Sitecore.Analytics']" type="Sitecore.XA.Foundation.Theming.Pipelines.HtpRequestProcessed.FixInternetExplorerCompatibilityHeaders, Sitecore.XA.Foundation.Theming" resolve="true" />
      </httpRequestProcessed>
      <assetService>
        <processor type="Sitecore.XA.Foundation.Theming.Pipelines.AssetService.AddTheme, Sitecore.XA.Foundation.Theming" resolve="true" />
        <processor type="Sitecore.XA.Foundation.Theming.Pipelines.AssetService.AddThemeExtensions, Sitecore.XA.Foundation.Theming" resolve="true" />
      </assetService>
      <decoratePage>
        <processor type="Sitecore.XA.Foundation.Theming.Pipelines.DecoratePage.AddWirefarameImagesClass, Sitecore.XA.Foundation.Theming" resolve="true" />
      </decoratePage>
      <speak.client.resolveScript>
        <processor type="Sitecore.Resources.Pipelines.ResolveScript.Controls, Sitecore.Speak.Client">
          <sources hint="raw:AddSource">
            <source folder="/sitecore/shell/client/Sitecore/ExperienceAccelerator/ExperienceEditor/Theming" deep="true" category="Theming" pattern="*.js" />
          </sources>
        </processor>
      </speak.client.resolveScript>
      <publishEndResultBatch>
        <processor type="Sitecore.XA.Foundation.Theming.Pipelines.PublishEndResultBatch.CheckOptimizedItem, Sitecore.XA.Foundation.Theming" resolve="true" />
      </publishEndResultBatch>
    </pipelines>
    <services>
        <register serviceType="Sitecore.XA.Foundation.Theming.CompatibilityMode.ICompatibilityModeProvider, Sitecore.XA.Foundation.Theming" implementationType="Sitecore.XA.Foundation.Theming.CompatibilityMode.CompatibilityModeProvider, Sitecore.XA.Foundation.Theming" lifetime="Singleton"/>
        <register serviceType="Sitecore.XA.Foundation.Theming.Services.IWireframeImagesService, Sitecore.XA.Foundation.Theming" implementationType="Sitecore.XA.Foundation.Theming.Services.WireframeImagesService, Sitecore.XA.Foundation.Theming" lifetime="Singleton"/>
        <register serviceType="Sitecore.XA.Foundation.Theming.IThemeExtensionsContext, Sitecore.XA.Foundation.Theming" implementationType="Sitecore.XA.Foundation.Theming.ThemeExtensionsContext, Sitecore.XA.Foundation.Theming" lifetime="Singleton"/>
        <register serviceType="Sitecore.XA.Foundation.Theming.IThemingContext, Sitecore.XA.Foundation.Theming" implementationType="Sitecore.XA.Foundation.Theming.ThemingContext, Sitecore.XA.Foundation.Theming" lifetime="Singleton"/>
    </services>
    <sitecore.experienceeditor.speak.requests>
      <request name="ExperienceEditor.XA.GetWireframeImagesState" type="Sitecore.XA.Foundation.Theming.Requests.GetWireframeImagesState, Sitecore.XA.Foundation.Theming"/>
      <request name="ExperienceEditor.XA.ToggleWireframeImagesState" type="Sitecore.XA.Foundation.Theming.Requests.ToggleWireframeImagesState, Sitecore.XA.Foundation.Theming"/>
    </sitecore.experienceeditor.speak.requests>
    <mediaLibrary>
      <mediaTypes>
        <mediaType name="Optimized JS" extensions="sxa_opt_js">
          <mimeType>application/x-javascript</mimeType>
          <sharedTemplate>Foundation/Experience Accelerator/Theming/Optimized File</sharedTemplate>
          <versionedTemplate>Foundation/Experience Accelerator/Theming/Optimized File</versionedTemplate>
        </mediaType>
        <mediaType name="Optimized CSS" extensions="sxa_opt_css">
          <mimeType>text/css</mimeType>
          <sharedTemplate>Foundation/Experience Accelerator/Theming/Optimized File</sharedTemplate>
          <versionedTemplate>Foundation/Experience Accelerator/Theming/Optimized File</versionedTemplate>
        </mediaType>
      </mediaTypes>
    </mediaLibrary>
  </sitecore>
</configuration>